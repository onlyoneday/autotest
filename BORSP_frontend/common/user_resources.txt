*** Settings ***

Documentation  A resource file containing the specific keywords and variables for application
Library        Selenium2Library
Library        String
Resource       ../common/resources.txt

*** Keywords ***

Create User
    [Arguments]   	${username}  ${name}  ${email}  ${password}  ${repassword}  ${description}  ${super}
    Click Element  stackCreate
	Input Text		input-username	 ${username}
	Input Text		input-name       ${name}
	Input Text		input-email      ${email}
	Input Text		input-password      ${password}
	Input Text		input-repassword    ${repassword}
	Input Text		input-userDescription   ${description}
	Run Keyword If  '${super}' == 'True'    Click Element   checkbox-suppermanager

Select User Group
	[Arguments]   	${group}  ${role}
	Click Element   stackParametersAdd
	${gpath} =      Evaluate  '//*[@aria-hidden="false"]/md-select-menu/md-content/md-option/div[contains(text(),'+'"${group}"'+')]'
	${rpath} =  	Evaluate  '//*[@aria-hidden="false"]/md-select-menu/md-content/md-option[@value='+'"${role}"'+']'
	Click Element   select-group0
	Click Element   xpath=${gpath}
	Click Element   xpath=//*[@id="groupForm0"]/md-select[@id="select-role"]
	Click Element   xpath=${rpath}

Select User Group2
	[Arguments]   	${group}  ${role}
	Click Element   stackParametersAdd
	${gpath} =      Evaluate  '//*[@aria-hidden="false"]/md-select-menu/md-content/md-option/div[contains(text(),'+'"${group}"'+')]'
	${rpath} =  	Evaluate  '//*[@aria-hidden="false"]/md-select-menu/md-content/md-option[@value='+'"${role}"'+']'
	Click Element   select-group1
	Click Element   xpath=${gpath}
	Click Element   xpath=//*[@id="groupForm1"]/md-select[@id="select-role"]
	Click Element   xpath=${rpath}

Edit User Info
	[Arguments]     ${name}
	${index} =      Get User Index    ${name}
	${no} =         Evaluate   ${index}-1
	${path} =       Evaluate   'node-list-menu-'+'${no}'
	Click Element   ${path}
	${button} =     Evaluate   'editUserInfo'+'${no}'
	Click And Wait  ${button} 

Edit User Group
	[Arguments]     ${name}
	${index} =      Get User Index    ${name}
	${no} =         Evaluate   ${index}-1
	${path} =       Evaluate   'node-list-menu-'+'${no}'
	Click Element   ${path}
	${button} =     Evaluate   'editUserGroup'+'${no}'
	Click And Wait  ${button} 

Add User Group
	[Arguments]   	${group}  ${role}
	${gpath} =      Evaluate  '//*[@aria-hidden="false"]/md-select-menu/md-content/md-option/div[contains(text(),'+'"${group}"'+')]'
	${rpath} =  	Evaluate  '//*[@aria-hidden="false"]/md-select-menu/md-content/md-option[@value='+'"${role}"'+']'
	Click Element   update-select-group
	Click Element   xpath=${gpath}
	Run Keyword If  '${group}' <> '${SUPER}'   Click Element   update-select-role
	Run Keyword If  '${group}' <> '${SUPER}'   Click Element   xpath=${rpath}

Edit User Password
	[Arguments]     ${name}
	${index} =      Get User Index    ${name}
	${no} =         Evaluate   ${index}-1
	${path} =       Evaluate   'node-list-menu-'+'${no}'
	Click Element   ${path}
	${button} =     Evaluate   'changePassword'+'${no}'
	Click And Wait  ${button} 

Change User Password
    [Arguments]   	${newpassword}  ${repassword}
	Input Text		modals-new-password    ${newpassword}
	Input Text		modals-again-password  ${repassword}

Delete User
	[Arguments]     ${name}
	${index} =      Get User Index    ${name}
	${no} =         Evaluate   ${index}-1
	${path} =       Evaluate   'node-list-menu-'+'${no}'
	Click Element   ${path}
	${button} =     Evaluate   'deleteUser'+'${no}'
	Click And Wait  ${button} 
	Click And Wait  css=md-dialog-actions > button:nth-child(2)

Disable User
	[Arguments]     ${name}
	${index} =      Get User Index    ${name}
	${no} =         Evaluate   ${index}-1
	${button} =     Evaluate   'disableUser'+'${no}'
	Click And Wait  ${button} 
	Click And Wait  css=md-dialog-actions > button:nth-child(2)

Enable User
	[Arguments]     ${name}
	${index} =      Get User Index    ${name}
	${no} =         Evaluate   ${index}-1
	${button} =     Evaluate   'enableUser'+'${no}'
	Click And Wait  ${button} 

Get User Index
    [Arguments]     ${name}
    Input Text      stackListSearch    ${name}
    Sleep  1
    ${row} =        Get Matching Xpath Count    //*[@id='user-list-table']/tbody/tr[*]
    :FOR    ${index}   IN RANGE   ${row}
    \       ${li} =    Evaluate   ${row}-${index}
    \       ${path} =     Evaluate   '//*[@id="user-list-table"]/tbody/tr['+'${li}'+']/td[1]/p'
    \       ${uname} =    Get Text   ${path}
    \       Return From Keyword If   "${uname}" == "${name}"   ${li}

Input Registry
    [Arguments]     ${name}  ${addr}  ${userName}  ${password}
	Input Text      create-registry-name  ${name}
	Input Text      create-registry-addr  ${addr}
	Input Text      create-registry-userName  ${userName}
	Input Text      create-registry-password  ${password}


